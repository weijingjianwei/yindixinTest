/**
 * @copyright 2017 indie Semiconductor
 * 
 * This file is proprietary to indie Semiconductor.
 * All rights reserved. Reproduction or distribution, in whole
 * or in part, is forbidden except by express written permission
 * of indie Semiconductor.
 * 
 * @file adc_sfr.h
 */

#ifndef __ADC_SFR_H__
#define __ADC_SFR_H__

/**
 * @brief A structure to represent Special Function Registers for ADC.
 */
typedef struct {

   union {
      struct {
         uint32_t MODE             :  1; /*!< ADC mode select */
         uint32_t AUTOEN           :  1; /*!< Bias Enable mode */
         uint32_t ATTEN            :  1; /*!< ADC input Attenuation setting */
         uint32_t SAMPCYC          :  3; /*!< Sample cycle */
         uint32_t SWSYNCIN         :  1; /*!< Soft Sync Input */
         uint32_t                 :  9; /*    (reserved) */
         uint32_t TRMLEDBUFFER4ADC :  1; /*!< LED BUFFER ENABLE */
         uint32_t                 : 15; /*    (reserved) */
      };
      uint32_t WORD;
   } CONF;

   union {
      struct {
         uint32_t CONVERT :  1; /*!< ADC START/STATUS Register */
         uint32_t CONT    :  1; /*!< Continuous Convesion Enable */
         uint32_t SYNCENA :  1; /*!< Sync Enable */
         uint32_t        :  1; /*    (reserved) */
         uint32_t STUPDLY :  2; /*!< Startup Delay */
         uint32_t IRQENA  :  1; /*!< IRQ Enable */
         uint32_t IRQCLR  :  1; /*!< IRQ Clear */
         uint32_t CHSEQ   :  6; /*!< Channel Sequence */
         uint32_t        : 18; /*    (reserved) */
      };
      uint32_t WORD;
   } CNTRL;

   union {
      struct {
         uint32_t TCURR  :  4; /*!< TCURR setting */
         uint32_t TCHNL  :  4; /*!< TCHNL setting */
         uint32_t TGUARD :  4; /*!< TGUARD setting */
         uint32_t       : 20; /*    (reserved) */
      };
      uint32_t WORD;
   } TSET;

   uint32_t DATA1: 12;
   uint32_t      : 20; /*    (reserved) */

   uint32_t DATA2: 12;
   uint32_t      : 20; /*    (reserved) */

   uint32_t DATA0345: 12;
   uint32_t         : 20; /*    (reserved) */

   union {
      struct {
         uint32_t CONVDONE :  1; /*!< The set Sequence of Conversions is Done */
         uint32_t FSM      :  6; /*!< current state of the ADC Sequencer */
         uint32_t         : 25; /*    (reserved) */
      };
      uint32_t WORD;
   } STATUS;

} ADC_SFRS_t;

/**
 * @brief The starting address of ADC SFRS.
 */
#define ADC_SFRS ((__IO ADC_SFRS_t *)0x50010d00)

#endif /* end of __ADC_SFR_H__ section */

