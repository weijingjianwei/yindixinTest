/**
 * @copyright 2017 indie Semiconductor
 * 
 * This file is proprietary to indie Semiconductor.
 * All rights reserved. Reproduction or distribution, in whole
 * or in part, is forbidden except by express written permission
 * of indie Semiconductor.
 * 
 * @file pwm_sfr.h
 */

#ifndef __PWM_SFR_H__
#define __PWM_SFR_H__

/**
 * @brief A structure to represent Special Function Registers for PWM.
 */
typedef struct {

   uint32_t            :  8; /*    (reserved) */
   uint32_t PRESCALESEL:  3;
   uint32_t            : 21; /*    (reserved) */

   union {
      struct {
         uint32_t ENAREQ :  1; /*!< Enable request */
         uint32_t       :  7; /*    (reserved) */
         uint32_t ENASTS :  1; /*!< Enable status */
         uint32_t       :  7; /*    (reserved) */
         uint32_t INVERT :  1;
         uint32_t       :  7; /*    (reserved) */
         uint32_t UPDATE :  1;
         uint32_t       :  7; /*    (reserved) */
      };
      uint32_t WORD;
   } CTRL;

   union {
      struct {
         uint32_t PWIDTH : 16; /*!< Pulse Width */
         uint32_t PERIOD : 16;
      };
      uint32_t WORD;
   } PULSE;

   union {
      struct {
         uint32_t ENABLE :  2; /*!< Interrupt enable */
         uint32_t       : 14; /*    (reserved) */
         uint32_t CLEAR  :  2; /*!< Interrupt clear */
         uint32_t       : 14; /*    (reserved) */
      };
      uint32_t WORD;
   } INTCTRL;

   union {
      struct {
         uint32_t STATUS :  2; /*!< Interrupt status */
         uint32_t       : 14; /*    (reserved) */
         uint32_t IRQ    :  2; /*!< Interrupt active */
         uint32_t       : 14; /*    (reserved) */
      };
      uint32_t WORD;
   } INTSTATUS;

   union {
      struct {
         uint32_t ENABLE :  1; /*!< Interrupt enable */
         uint32_t       :  7; /*    (reserved) */
         uint32_t CLEAR  :  1; /*!< Interrupt clear */
         uint32_t       :  7; /*    (reserved) */
         uint32_t STATUS :  1; /*!< Interrupt status */
         uint32_t       :  7; /*    (reserved) */
         uint32_t IRQ    :  1; /*!< Interrupt active */
         uint32_t       :  7; /*    (reserved) */
      };
      uint32_t WORD;
   } INTUPDATED;

} PWM_SFRS_t;

/**
 * @brief The starting address of PWM SFRS.
 */
#define PWM_SFRS ((__IO PWM_SFRS_t *)0x50010600)

#endif /* end of __PWM_SFR_H__ section */

